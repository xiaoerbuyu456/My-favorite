一、寄存器的位操作主要是将特定位置０或置１.一般情况是先擦除相应的位（就是置０），然后再置１.
１.如果只置为其中某一位为１
　　ａ＆＝～（１＜＜ｘ）　　／／将ｘ位置０，将１左移ｘ位，再取反，最后再与ａ＆
  　ｂ｜＝（１＜＜ｘ）　　　／／将ｘ位置１
２.如果一下置位多个位，下面的方法可以用
　　ａ＆＝～０００１１１００　　　／／第２－４位置０
  　ａ｜＝０００１１１００　　　　／／第２－４位置１
３.上面２的方法犯了可能会改变其它位，不推荐使用
 　　ａ＆＝～（（１＜＜２）｜（１＜＜３）｜（１＜＜４））　　／／第２－４位置０
   　ａ｜＝（（１＜＜２）｜（１＜＜３）｜（１＜＜４））　　／／第２－４位置１
  从方法３可以得出，假如ａ＝０１１０１０１１，使２－４位置０或１，可得出ｂ＝０００００１１１（因为２－４有三位），
  　使ａ置０：ａ＆＝～（ｂ＜＜２）
  　使ａ置１：ａ｜＝（ｂ＜＜２）
４.判断寄存器某一位使０还是１.
　　ａ＆（１＜＜ｘ）／／与操作，如果相应位是０，则结果是０，如果相应位是１，则结果是１.
  　ａ｜（０＜＜ｘ）／／或操作，如果相应位是０，则结果是０，如果相应位是１，则结果是１.
二、代码实战（注：设置就是设置位１的意思，清除就是清除为０的意思）
１.给定一个整型数ａ，设置ａ的ｂｉｔ３，保证其它位不变
　　ｕｎｓｉｇｎｅｄ　ｉｎｔ　ａ　＝　０ｘｃ３０５７ａｄ３；
  　ａ　｜＝　（１＜＜３）；
   ｐｒｉｎｔｆ（＂ａ＝０ｘ％ｘ＼ｎ＂，ａ）；　　／／ａ＝０ｘ３０５７ａｄｂ
２．给定一个整形数ａ，设置ａ的ｂｉｔ３～ｂｉｔ７，保持其它位不变
　　ｕｎｓｉｇｎｅｄ　ｉｎｔ　ａ　＝　０ｘｃ３０５７ａｄ３；
  　ａ　｜＝　（０ｘ１ｆ＜＜３）；　　　　　　　　／／可参考概念３得知０ｘ１ｆ的来历
   ｐｒｉｎｔｆ（＂ａ＝０ｘ％ｘ＼ｎ＂，ａ）；　　／／ａ＝０ｘ３０５７ａｆｂ
３.给定一个整型数ａ，清除ａ的ｂｉｔ１５，保证其它位不变。
　　ｕｎｓｉｇｎｅｄ　ｉｎｔ　ａ　＝　０ｘｃ３０５７ａｄ３；
  　ａ　｜＝　～（１＜＜１５）；
   ｐｒｉｎｔｆ（＂ａ＝０ｘ％ｘ＼ｎ＂，ａ）；　　／／ａ＝０ｘ３０５３ａｄ３
４．给定一个整型数ａ，清除ａ的ｂｉｔ１５～ｂｉｔ２３，保持其它位不变。
　　ｕｎｓｉｇｎｅｄ　ｉｎｔ　ａ　＝　０ｘｃ３０５７ａｄ３；
  　ａ　｜＝　～（０ｘ１ｆｆ＜＜１５）；
   ｐｒｉｎｔｆ（＂ａ＝０ｘ％ｘ＼ｎ＂，ａ）；　　／／ａ＝０ｘ３００３ａｄ３
５．给定一个整型数ａ，取出ａ的ｂｉｔ３～ｂｉｔ８。（注意：要取出这个数，首先要把其它位清零＆，之后右移就可以得出那个数了）
　　 unsigned int a = 0xc305bad3;
　   unsigned int tmp;
　　tmp = a & (0x3f<<3);
　　tmp >>= 3;
    printf("tmp = 0x%x.\n", tmp);
6.用C语言给一个寄存器的bit7～bit17赋值937（其余位不受影响）(注意：要赋值就需要把要赋值的那几位清零&，然后把需要赋值的数左移到那几位上就可以了)
    unsigned int a = 0xc305bad3;
    a &= (~(0x7ff<<7));
    a |= (937<<7);
    printf("a = 0x%x.\n", a);            //a = 0xc305d4d3.
7.用C语言将一个寄存器的bit7～bit17中的值加17（其余位不受影响）(注：要加值，就要把那几位的数字取出来，然后把那几位清零&，之后右移，相加，左移，再置1 |)
   unsigned int a = 0xc305bad3;
   unsigned int tmp;
   tmp = a & (0x7ff<<7);
   a &= (~(0x7ff<<7))；
   tmp >>= 7;
   tmp += 17;
   tmp <<= 7;
   a |= tmp;
   printf("a = 0x%x.\n", a);            //a = 0xc305c353
8.用C语言给一个寄存器的bit7～bit17赋值937，同时给bit21～bit25赋值17.注意：同时赋值和一个个来赋值是一样的，就是多了几步而已
    unsigned int a = 0xc305bad3;
    a &= (~(0x7ff<<7));
    a |= (937<<7);
    a &= (~(0x1f<<21));
    a |= (17<<21);
    printf("a = 0x%x.\n", a);            //a = 0xc225d4d3.
  不同版本
    unsigned int a = 0xc305bad3;
    a &= ((~(0x7ff<<7)) & (~(0x1f<<21)));    
    a |= ((937<<7) | (17<<21));
    printf("a = 0x%x.\n", a);            //a = 0xc225d4d3.
