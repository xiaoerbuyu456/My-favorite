/*输入任意一个长度的字符串，进行正序与倒序输出*/
	int strlen=5;
	int count=0;
	char ch;
	char *str=(char *)malloc(strlen*sizeof(char));
	printf("please input!\n");
	while(ch!='\n')
	{
		ch=getchar();
		count++;
		if(count>=strlen)
		{
			str=(char *)realloc(str,sizeof(char)*(++strlen));
		}
		str[count-1]=ch;
	}	
	//正序输出
	for(int i=0;i<count;i++)
	{
		printf("%c",str[i]);
	}
	printf("\n");
	//倒序输出
	for(int j=count-1;j>0;j--)
	{
		printf("%c",str[j]);
	}
	printf("\n");
//主要是对（void *）malloc（n*sizeof(a)）与void *realloc(void *ptr,size_t size);函数的使用(动态数组)
(1) malloc（）
    从堆上面分配内存
(2) realloc（）
    在之前分配内存块的基础上面，重新分配，使内存变大或变小
(3)calloc:
   从堆上分配内存并清零
(4) free（）
   释放已分配的内存区域。
